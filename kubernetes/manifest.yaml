# name: k8smanifest.yaml
# description: deploys application into sandbox namespace and exposes on an Azure internal load balancer
# author: Nigel Wardle
# created: 05/11/19
# modified 05/11/19 
---
# create service account that pods will run using
apiVersion: v1
kind: ServiceAccount
metadata:
  name: sample
automountServiceAccountToken: false
---
# create Role that pods will use
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
 name: sample-role
 namespace: sample
rules:
 — apiGroups:
   — ''
 resources:
   — pods
 verbs:
   — list
---
# bind role to service account
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
 name: sample-rolebinding
 namespace: sample
roleRef:
 kind: Role
 name: sample-role
 apiGroup: rbac.authorization.k8s.io
subjects:
 — kind: ServiceAccount
   name: sample
   namespace: sample
---
# create deployment of pods
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sample
  labels:
    app: sample
spec:
  replicas: 2
  selector:
    matchLabels:
      app: sample
  template:
    metadata:
      labels:
        app: sample
    spec:
      serviceAccountName: sample
      securityContext:
        runAsUser: 1000
      containers:
      - name: sample
        image: cdwuk/sample
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 3
          periodSeconds: 3
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - all
            add:
              - NET_BIND_SERVICE
        resources: 
          requests:
            memory: "250Mi"
            cpu: "250m"
          limits:
            memory: "500Mi"
            cpu: "500m"
        ports:
        - containerPort: 80
---
# expose pods to service on public IP
apiVersion: v1
kind: Service
metadata:
  name: sample
  annotations:
    service.beta.kubernetes.io/azure-load-balancer-internal: "false" # set to true for public IP
    # service.beta.kubernetes.io/azure-load-balancer-internal-subnet: "apps-subnet" # specify subnet
spec:
  type: LoadBalancer
  # loadBalancerIP: 10.240.0.25
  ports:
  - port: 80
  selector:
    app: sample
