# create sample namespace
apiVersion: v1
kind: Namespace
metadata:
  name: sample
---
# create service account that pods will run using
apiVersion: v1
kind: ServiceAccount
metadata:
  name: sample
automountServiceAccountToken: false
---
# create role that PODs will be assigned
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
 name: sample-role
 namespace: sample
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "watch", "list"]
---
# Bind role to sample service account
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
 name: sample-rolebinding
 namespace: sample
roleRef:
 kind: Role
 name: sample-role
 apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: sample
  namespace: sample
---
# Deploy 2 instances of image
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sample
  labels:
    app: sample
spec:
  replicas: 2
  selector:
    matchLabels:
      app: sample
  template:
    metadata:
      labels:
        app: sample
    spec:
      serviceAccountName: sample
      containers:
      - name: sample
        image: ccukssbacr.azurecr.io/sample:#{Build.BuildNumber}#
        env:
        - name: version
          value: "1.0"
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 3
          periodSeconds: 3
        resources: 
          requests:
            memory: "500Mi"
            cpu: "500m"
          limits:
            memory: "750Mi"
            cpu: "750m"
        ports:
        - containerPort: 80
---
# expose pods to service on private IP
apiVersion: v1
kind: Service
metadata:
  name: sample
  annotations:
    service.beta.kubernetes.io/azure-load-balancer-internal: "true" # set to true for public IP
    # service.beta.kubernetes.io/azure-load-balancer-internal-subnet: "apps-subnet" # specify subnet
spec:
  type: LoadBalancer
  # loadBalancerIP: 10.240.0.25
  ports:
  - port: 80
  selector:
    app: sample
